{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\matth\\\\Code\\\\ChatApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\matth\\\\Code\\\\ChatApp\\\\client\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport queryString from 'query-string';\nimport './App.css';\nimport Chatbox from './Components/Chatbox';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      requestID: null,\n      user: null,\n      messages: [],\n      lobby: ''\n    };\n    this.ws = new WebSocket('ws://localhost:5000');\n\n    this.componentDidUpdate = () => {\n      console.log(this.state.messages);\n    };\n\n    this.apiRes = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.getUserID = async () => {\n      const response = await fetch('/get_user_number');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        outgoingMessage: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.ws.send(this.state.outgoingMessage);\n      this.setState(state => {\n        const messages = [...state.messages, this.state.outgoingMessage];\n        return _objectSpread({}, state, {\n          messages\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.apiRes().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err)); // this.getUserID()\n    //   .then(res=> this.setState({user: res.express}))\n    //   .catch(err=> console.log(err));\n\n    this.ws.onopen = () => {\n      console.log('connected to ws!');\n    };\n\n    this.ws.onmessage = evt => {\n      const message = evt.data;\n      this.setState(state => {\n        const messages = [...state.messages, message];\n        return _objectSpread({}, state, {\n          messages\n        });\n      });\n      console.log(message);\n    };\n\n    this.ws.onclose = () => {\n      console.log('disconnected');\n    };\n\n    this.setState(() => _objectSpread({}, this.state, {\n      lobby: this.props.location.search ? queryString.parse(this.props.location.search) : ''\n    }));\n    console.log(this.state.lobby.game);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.data), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.user), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.outgoingMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.dataFromServer), React.createElement(Chatbox, {\n      ws: this.ws,\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/matth/Code/ChatApp/client/src/App.js"],"names":["React","Component","queryString","Chatbox","App","state","data","requestID","user","messages","lobby","ws","WebSocket","componentDidUpdate","console","log","apiRes","response","fetch","body","json","status","Error","message","getUserID","handleChange","event","setState","outgoingMessage","target","value","handleSubmit","send","componentDidMount","then","res","express","catch","err","onopen","onmessage","evt","onclose","props","location","search","parse","game","render","dataFromServer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport queryString from 'query-string';\r\nimport './App.css';\r\nimport Chatbox from './Components/Chatbox';\r\n\r\nclass App extends Component {\r\n  state = {\r\n      data: null,\r\n      requestID: null,\r\n      user: null,\r\n      messages: [],\r\n      lobby: ''\r\n  };\r\n\r\n  ws = new WebSocket('ws://localhost:5000')\r\n\r\n  componentDidMount() {\r\n      // Call our fetch function below once the component mounts\r\n    this.apiRes()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n\r\n    // this.getUserID()\r\n    //   .then(res=> this.setState({user: res.express}))\r\n    //   .catch(err=> console.log(err));\r\n\r\n    this.ws.onopen = () =>{\r\n      console.log('connected to ws!');\r\n    }\r\n\r\n    this.ws.onmessage = evt =>{\r\n      const message = evt.data;\r\n      this.setState(state => {\r\n        const messages = [...state.messages, message];\r\n        return{...state, messages}\r\n      })\r\n      console.log(message)\r\n    }\r\n\r\n    this.ws.onclose = () =>{\r\n      console.log('disconnected');\r\n    }\r\n\r\n    this.setState(() => ({...this.state, lobby: this.props.location.search ? queryString.parse(this.props.location.search) : ''}));\r\n    console.log(this.state.lobby.game);\r\n  }\r\n\r\ncomponentDidUpdate = () => {\r\n  console.log(this.state.messages);\r\n}\r\n\r\n  apiRes = async () => {\r\n    const response = await fetch('/express_backend');\r\n\r\n    const body = await response.json();\r\n\r\n    if(response.status !== 200){\r\n      throw Error(body.message)\r\n    }\r\n    return body;\r\n  };\r\n\r\n  getUserID = async () => {\r\n    const response = await fetch('/get_user_number');\r\n    const body = await response.json();\r\n\r\n    if(response.status !== 200){\r\n      throw Error(body.message)\r\n    }\r\n\r\n    return body;\r\n  };\r\n\r\n  // apiRes2 = async () => {\r\n  //   const response = await fetch('/');\r\n\r\n  //   const body = await response.json();\r\n\r\n  //   if(response.status !== 200){\r\n  //     throw Error(body.message)\r\n  //   }\r\n  //   return body;\r\n  // }\r\n\r\n\r\n  handleChange = (event) => {\r\n    this.setState({outgoingMessage: event.target.value});\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.ws.send(this.state.outgoingMessage);\r\n    this.setState(state => {\r\n      const messages = [...state.messages, this.state.outgoingMessage];\r\n      return{...state, messages}\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>{this.state.data}</p>\r\n          <p>{this.state.user}</p>\r\n          <input type='text' onChange={this.handleChange} value ={this.state.outgoingMessage} />\r\n          <button onClick={this.handleSubmit}>Submit</button>\r\n          <p>{this.state.dataFromServer}</p>\r\n\r\n          <Chatbox ws={this.ws} messages={this.state.messages}/>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}